!head
  <title>Modular Tryit</title>
  @@include tools/head.try
  <script src="https://unpkg.com/react@16.12.0/umd/react.production.min.js" crossorigin="anonymous"></script>
  <script src="https://unpkg.com/react-dom@16.12.0/umd/react-dom.production.min.js" ></script>
  <script src="https://unpkg.com/semantic-ui-react/dist/umd/semantic-ui-react.min.js"></script>
!md
   # Create UI

!tryit
//HTML in display area

// add some style
$$.HTML(`
      <style>
       .center {
        display: block;
        margin-left: auto;
        margin-right: auto;
      }
    </style>
`)

// Now render some html

$$.HTML(`
  <div style="height: 30rem">
    <h1>Hello World ${(new Date()).toLocaleDateString()}</h1>
    <img class="center" src="https://www.w3schools.com/html/pic_trulli.jpg" />
  </div>
`)

      



!tryit
  // JSX example
  var aClock= () => (
    <div style={{height: "30rem"}}>
      <h1 class="center"><b>Hello World</b> {(new Date()).toLocaleDateString()}</h1>
      <img class="center" src="https://www.w3schools.com/html/pic_trulli.jpg" />
    </div>
  );

  aClock()

!md
	## A simple clock

	Using React to render a simple clock

!tryit
    // React JSX
    function Clock() {
        const clock = () => ReactDOM.render(aClock(), document.getElementById('clock-id'));
        $$.lastly( () => setInterval(clock, 1000)); // execute after all rendering of output

        $$.HTML('<div id="clock-id" /><br /><br /><br /><br />---------------'); // render some HTML
    }	

    Clock();

!md
    ## Semantic-UI example

    ### Creating a target 

    ```tryit
      \!html
         \<div id="ui-target1" />
    ```

!html 
  <div id="ui-target" />
  <div style="margin-left: 30rem">
   <img src="https://dev.w3.org/SVG/tools/svgweb/samples/svg-files/AJ_Digital_Camera.svg" />
  </div>   

!tryit
  var strHtml =   `
    <div style="width: 70%; margin-left: 10rem">
      <div class="ui three buttons">
        <button class="ui active button red">One</button>
        <button class="ui button green">Two</button>
        <button class="ui button">Three</button>
      </div>
    </div>
  `;

  ducument.getElementById('ui-target').innerHTML = strHtml;


!md
  ###

!tryit
  // Javascript - $$.HTML = builtin HTML
  $$.HTML(

  );

!tryit
  // JSX - 
  (
  <div style={{width: "70%", marginLeft: '10rem'}}>
    <div class="ui three buttons">
      <button class="ui active button red">One</button>
      <button class="ui button green">Two</button>
      <button class="ui button">Three</button>
    </div>
  </div>
  )
!end